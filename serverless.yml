# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: test-project-sailesh
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${env:STAGE, 'dev'}
  region: us-east-1
  vpc:
    securityGroupIds:
      - Fn::GetAtt: [ LambdaSecurityGroup, GroupId ]
    subnetIds:
      - Fn::GetAtt: [ PrivateSubnet1, SubnetId ]
      - Fn::GetAtt: [ PrivateSubnet2, SubnetId ]
      - Fn::GetAtt: [ PrivateSubnet3, SubnetId ]

  environment:
    KMS_ENV_ID: !Ref LambdaEnvKMSKey

functions:
  testSaileshLambdaFunction:
    name: ${self:custom.stage}-sls-lambda-handler-function
    handler: handler.handler
    role: !GetAtt LambdaExecutionRole.Arn 
    runtime: nodejs20.x
    memorySize: 1024
    timeout: 30
    events:
      - http:
          path: 'handler'
          method: get
    package:
      individually: true
      patterns:
        - '!resources_file/**'
    vpc:
      securityGroupIds:
        - !Ref LambdaSecurityGroup
      subnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
        - !Ref PrivateSubnet3

  helloLambdaFunction:
    name: ${self:custom.stage}-sls-lambda-hello-function
    handler: hello.handler
    role: !GetAtt helloLambdaRole.Arn
    runtime: nodejs20.x
    memorySize: 1024
    timeout: 30
    environment:
      KMS_ENV_ID: !Ref LambdaEnvKMSKey
    events:
      - http:
          path: 'hello'
          method: get
    package:
      individually: true
      patterns:
        - '!resources_file/**'
    vpc:
      securityGroupIds:
        - !Ref LambdaSecurityGroup
      subnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
        - !Ref PrivateSubnet3


custom:
  stage: ${env:STAGE, 'dev'}
  ServiceName: "${self:custom.stage}-sls"
  config_file: ${file(./resources_file/config_file/config.yml)}
  VPC_CIDR: ${self:custom.config_file.VPC_CIDR}
  DBMinCapacity: ${self:custom.config_file.DBMinCapacity}
  DBMaxCapacity: ${self:custom.config_file.DBMaxCapacity}
  ImageId: ${self:custom.config_file.ImageId}
  InstanceType: ${self:custom.config_file.InstanceType}
  S3BucketName: ${self:custom.ServiceName}-sailesh-bucket
  TaskBucketName: ${self:custom.ServiceName}-task-bucket
  TaskDomainName: "${self:custom.ServiceName}-task"


resources:
  - ${file(./resources_file/vpc.yml)}
  - ${file(./resources_file/api.yml)}
  - ${file(./resources_file/bastionhost.yml)}
  - ${file(./resources_file/cloudfront.yml)}
  - ${file(./resources_file/secrets.yml)}
  - ${file(./resources_file/db.yml)}
  - ${file(./resources_file/rdsproxy.yml)}
  - ${file(./resources_file/s3.yml)}
  - ${file(./resources_file/iam.yml)}
  - ${file(./resources_file/kms.yml)}
  - ${file(./resources_file/lambdaalerts.yml)}
  - ${file(./resources_file/alerts.yml)}

